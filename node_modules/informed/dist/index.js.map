{"version":3,"sources":["webpack://informed/webpack/universalModuleDefinition","webpack://informed/webpack/bootstrap","webpack://informed/./node_modules/node-libs-browser/node_modules/process/browser.js","webpack://informed/./src/debug.js","webpack://informed/./src/ObjectMap.js","webpack://informed/./src/FormController.js","webpack://informed/./src/Context.js","webpack://informed/./src/components/FormProvider.js","webpack://informed/./src/hooks/useIsomorphicLayoutEffect.js","webpack://informed/./src/hooks/useForm.js","webpack://informed/./src/components/Form.js","webpack://informed/./src/hooks/useFormApi.js","webpack://informed/./src/hooks/useFormState.js","webpack://informed/./src/components/Scope.js","webpack://informed/./src/hooks/useStateWithGetter.js","webpack://informed/./src/hooks/useField.js","webpack://informed/./src/hooks/useArrayField.js","webpack://informed/./src/components/ArrayField.js","webpack://informed/./src/HOC/withFormApi.js","webpack://informed/./src/HOC/withFormState.js","webpack://informed/./src/hooks/useFieldApi.js","webpack://informed/./src/hooks/useFieldState.js","webpack://informed/./src/HOC/withFieldState.js","webpack://informed/./src/HOC/withFieldApi.js","webpack://informed/./src/HOC/withRadioGroup.js","webpack://informed/./src/HOC/asField.js","webpack://informed/./src/utils.js","webpack://informed/./src/components/form-fields/Text.js","webpack://informed/./src/components/form-fields/Radio.js","webpack://informed/./src/components/form-fields/TextArea.js","webpack://informed/./src/components/form-fields/Select.js","webpack://informed/./src/components/form-fields/Option.js","webpack://informed/./src/components/form-fields/Checkbox.js","webpack://informed/./src/components/form-fields/RadioGroup.js","webpack://informed/./src/index.js","webpack://informed/external \"events\"","webpack://informed/external \"lodash/get\"","webpack://informed/external \"lodash/has\"","webpack://informed/external \"lodash/pull\"","webpack://informed/external \"lodash/pullAt\"","webpack://informed/external \"lodash/setWith\"","webpack://informed/external \"lodash/toPath\"","webpack://informed/external \"lodash/unset\"","webpack://informed/external \"lodash/values\"","webpack://informed/external \"react\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","formatNodeArgs","config","namespace","useColors","color","prefix","split","join","formatBrowserArgs","index","lastC","replace","match","splice","browserColors","createLogger","undefined","_len","_key","unshift","namespaces","map","RegExp","slice","some","regex","test","colors","hash","charCodeAt","Math","abs","selectColor","type","__nwjs","localStorage","getItem","error","DEBUG","formatArgs","loadBrowser","debug","Debug","pathToArrayElem","path","pathArray","ldtoPath","Number","isInteger","cleanup","obj","pull","ldget","isArray","ldpull","every","JSON","stringify","ldunset","ObjectMap","ldvalues","val","ldhas","ldset","delete","FormController","_this","options","FormController_classCallCheck","_getPrototypeOf","fields","Map","registered","expectedRemovals","state","values","touched","errors","pristine","dirty","invalid","submits","deregister","_assertThisInitialized","register","setValue","setTouched","setError","setFormError","submitForm","reset","update","validate","keyDown","getField","expectRemoval","updater","EventEmitter","_objectSpread","_this2","field","fieldApi","allowEmptyString","allowEmptyStrings","setValues","setInitialValue","getValue","getTouched","getError","getState","getFormState","getValues","getFullField","fieldExists","getInitialValue","validateField","resetField","emitter","setFieldError","getOptions","notify","set","arrayField","lastIndexOf","initialValues","_this3","notifier","forEach","fieldName","toNotify","empty","_this4","initialValue","getFormApi","initial","_this5","_this6","res","validateFields","has","keyCode","preventEnter","preventDefault","dontPreventDefault","valid","fieldState","fieldStuff","magicValue","shadow","keepState","field2remove","FormRegisterContext","React","createContext","FormStateContext","FormApiContext","GroupContext","logger","FormProvider","_ref","children","formApi","formController","formState","rest","_objectWithoutProperties","external_react_default","a","createElement","Provider","useForm","useIsomorphicLayoutEffect","window","document","useLayoutEffect","useEffect","getApi","onChange","onSubmit","onValueChange","onSubmitFailure","userProps","useForm_objectWithoutProperties","formControllerOptions","useMemo","_slicedToArray","useState","setOptions","_useState4","setFormState","onChangeHandler","onSubmitHandler","onValueHandler","onFailureHandler","render","components_FormProvider","Form","renderProp","component","Form_objectWithoutProperties","props","_useForm","_extends","onReset","onKeyDown","useFormApi","useContext","useFormState","buildScopedFormApi","scope","Scope_objectSpread","Scope","formRegister","scopedFormApi","scopedRegister","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","buildScopedRegister","useStateWithGetter","ref","useRef","_useState2","useStateWithGetter_slicedToArray","setState","current","initializeValue","mask","initializeMask","format","parse","useField","fieldProps","userRef","maskWithCursorOffset","validateOnChange","validateOnBlur","validateOnMount","maskOnBlur","maintainCursor","useField_objectWithoutProperties","_useStateWithGetter2","useField_slicedToArray","setVal","getVal","_useStateWithGetter4","setErr","getErr","_useStateWithGetter6","setTouch","getTouch","_useStateWithGetter8","setCursor","getCursor","_useStateWithGetter10","setCursorOffset","getCursorOffset","maskedValue","setMaskedValue","initialValueRef","formOptions","maskedVal","offset","target","selectionStart","initVal","override","fullField","internalRef","selectionEnd","style","border","borderWidth","borderStyle","borderColor","borderImage","shouldUpdate","_toConsumableArray","uuidv4","random","toString","useArrayField","useArrayField_objectWithoutProperties","initialVals","keptValues","useArrayField_slicedToArray","setInitialValues","initialKeys","keys","setKeys","getKeys","validateWithLength","useArrayField_objectSpread","arrayFieldValue","remove","newKeys","newInitialValues","add","useArrayField_toConsumableArray","addWithInitialValue","ArrayField","ArrayField_objectWithoutProperties","withFormApi","Component","forwardRef","Consumer","withFormApi_extends","withFormState","withFormState_extends","buildFieldApi","exists","useFieldApi","buildFieldState","useFieldState","withFieldState","withFieldState_extends","withFieldApi","withFieldApi_extends","withRadioGroup","radioGroupApi","radioGroupState","withRadioGroup_extends","asField","WrappedComponent","_useField","asField_extends","forwardedRef","displayName","Text","Text_objectWithoutProperties","onBlur","background","Text_extends","Radio","Radio_objectWithoutProperties","groupValue","groupOnChange","groupOnBlur","Radio_extends","checked","TextArea","TextArea_objectWithoutProperties","TextArea_extends","Select","Select_objectWithoutProperties","multiple","selectRef","Select_extends","selected","from","filter","option","Option","Option_objectWithoutProperties","Option_extends","Checkbox","Checkbox_objectWithoutProperties","Checkbox_extends","RadioGroup","groupContext","RadioGroup_objectSpread","__webpack_exports__","components_Form","HOC_withFormApi","HOC_withFormState","HOC_withFieldApi","HOC_withFieldState","HOC_withRadioGroup","HOC_asField","hooks_useForm","hooks_useField","hooks_useFieldApi","hooks_useFieldState","hooks_useFormApi","hooks_useFormState","form_fields_Text","form_fields_Radio","form_fields_TextArea","form_fields_Select","form_fields_Option","form_fields_Checkbox","form_fields_RadioGroup","Text_Text","Radio_Radio","RadioGroup_RadioGroup","TextArea_TextArea","Select_Select","Checkbox_Checkbox","components_Scope","components_ArrayField","hooks_useArrayField","require"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"informed\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"informed\"] = factory();\n\telse\n\t\troot[\"informed\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * \n * I stole most of this code from the debug lib\n * https://github.com/visionmedia/debug\n * \n * Just wanted it to be easy to debug without relying on the dependency!\n */\n\n\n/**\n\t* Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @param {String} colors color pallette to choose from\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\nfunction selectColor(namespace, colors) {\n  let hash = 0;\n\n  for (let i = 0; i < namespace.length; i++) {\n    hash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return colors[Math.abs(hash) % colors.length];\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatNodeArgs(args, config) {\n\n  const name = config.namespace;\n\n  if (config.useColors) {\n    const c = config.color;\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n    const prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n  } else {\n    args[0] = name + ' ' + args[0];\n  }\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n */\n\nfunction formatBrowserArgs(args, config) {\n\n  args[0] = (config.useColors ? '%c' : '') + config.namespace;\n\n  if (!config.useColors) {\n    return;\n  }\n\n  const c = 'color: ' + config.color;\n\n  // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  let index = 0;\n  let lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, match => {\n    if (match === '%%') {\n      return;\n    }\n    index++;\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n\nconst browserColors = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33'\n];\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadBrowser() {\n  let namespaces;\n  try {\n    namespaces = localStorage.getItem('debug');\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!namespaces && typeof process !== 'undefined' && 'env' in process) {\n    namespaces = process.env.DEBUG;\n  }\n\n  return { \n    namespaces: namespaces || '', \n    colors: browserColors,\n    useColors: true,\n    formatArgs: formatBrowserArgs\n  };\n} \n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadNode() {\n  return { \n    namespaces: process.env.DEBUG || '',\n    colors: [6, 2, 3, 4, 5, 1], \n    useColors: true, \n    formatArgs: formatNodeArgs\n  };\n}\n\n\nfunction createLogger(prefix = null, config) {\n  return function(...args) {\n\n    if (prefix){\n      args.unshift(prefix);\n    }\n\n    // Create a namespace regex for each namespace\n    const matches = config.namespaces.split(',').map(( namespace )=>{\n      // Remove wildcard and add to regex if wildcard\n      if( namespace[namespace.length - 1] === '*' ){\n        return new RegExp('^' + namespace.slice(0, namespace.length-1) + '.*' + '$');\n      }\n      return new RegExp('^' + namespace + '$');\n    });\n    \n    // Does the prefix match a namespace\n    const match = matches.some((regex)=>{\n      return regex.test(prefix);\n    });\n\n    const conf = {\n      color: selectColor( prefix, config.colors ),\n      namespace: prefix, \n      useColors: config.useColors\n    };\n\n    if (process.env.NODE_ENV !== 'production' && match ) {\n      config.formatArgs(args, conf);\n      console.log(...args);\n    }\n  };\n}\n\nfunction nodeLogger(prefix) {\n  return createLogger(prefix, loadNode());\n}\n\nfunction browserLogger(prefix) {\n  return createLogger(prefix, loadBrowser());\n}\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = browserLogger;\n} else {\n  module.exports = nodeLogger;\n}","import ldset from 'lodash/setWith';\nimport ldunset from 'lodash/unset';\nimport ldtoPath from 'lodash/toPath';\nimport ldget from 'lodash/get';\nimport ldhas from 'lodash/has';\nimport ldvalues from 'lodash/values';\nimport ldpullAt from 'lodash/pullAt';\nimport ldpull from 'lodash/pull';\nimport Debug from './debug';\nconst debug = Debug('informed:ObjMap' + '\\t');\n\nconst pathToArrayElem = (path) => {\n  const pathArray = ldtoPath(path);\n  return Number.isInteger(+pathArray[pathArray.length - 1]);\n};\n\nclass ObjectMap {\n  static empty(object) {\n    return ldvalues(object).length === 0;\n  }\n\n  static get(object, path) {\n    const val = ldget(object, path);\n    debug('GOT', path, val);\n    return val;\n  }\n\n  static has(object, path) {\n    return ldhas(object, path);\n  }\n\n  static set(object, path, value) {\n    if (value !== undefined) {\n      debug('SETTING', path, value);\n      ldset(object, path, value);\n    } else {\n      // Setting things to undefined in informed is special!\n      // so in this else statement we deal with that\n\n      // If the path is to an array leaf then we want to set to undefined\n      // Example: \n      // path = 'foo.bar[2]'\n      // foo.bar = [ 'baz', 'raz', 'taz' ]\n      // setting taz to undefined   ^^^\n      if (pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined) {\n        debug('Special case SETTING', path, 'to undefined');\n        ldset(object, path, undefined);\n        let pathArray = ldtoPath(path);\n        pathArray = pathArray.slice(0, pathArray.length - 1);\n        cleanup(object, pathArray, false);\n      }\n      // Only delete the field if it needs to be deleted and its not a path to an array ( array leaf )\n      // Example: \n      // path = 'foo.bar'\n      // foo.bar = 'baz'\n      // removing foo.bar from the object completley\n      else if (!pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined) {\n        debug('Special case REMOVING', path, 'from object completley');\n        ObjectMap.delete(object, path);\n      }\n    }\n  }\n\n  static delete(object, path) {\n    debug('DELETE', path);\n    ldunset(object, path);\n    let pathArray = ldtoPath(path);\n    pathArray = pathArray.slice(0, pathArray.length - 1);\n    cleanup(object, pathArray);\n  }\n\n  // May need to do this some day ;)\n  // static pullOut(object, path, index) {\n  //   // Get the path to the array\n  //   let pathArray = ldtoPath(path);\n  //   pathArray = pathArray.slice(0, pathArray.length - 1).join();\n  //   debug('PathArray', pathArray);\n  //   // Get the array\n  //   const arr = ldget(object, pathArray);\n  //   debug('Array', arr);\n  //   // Pull out of array\n  //   ldpullAt(arr, index);\n  // }\n}\n\nfunction cleanup(obj, path, pull = true) {\n  // Base case no path left\n  if (path.length === 0) {\n    return;\n  }\n\n  const object = ldget(obj, path);\n\n  // Clean up undefined from array\n  if (Array.isArray(object) && pull) {\n    ldpull(object, undefined);\n  }\n\n  // Delete object if its empty\n  if (\n    Array.isArray(object)\n      ? object.every(e => e == null)\n      : JSON.stringify(object) === '{}'\n  ) {\n    ldunset(obj, path);\n  }\n  // Recur\n  cleanup(obj, path.slice(0, path.length - 1));\n}\n\nexport default ObjectMap;\n","import ObjectMap from './ObjectMap';\nimport { EventEmitter } from 'events';\nimport Debug from './debug';\nconst debug = Debug('informed:Controller' + '\\t');\n\nclass FormController extends EventEmitter {\n\n  constructor(options = {}) {\n\n    // Dont forget to call super! :)\n    super();\n\n    this.options = options;\n\n    // Map will store all fields\n    // Key => fieldName - example: \"foo.bar[3].baz\"\n    // Val => { field, fieldApi }\n    // Why? so the form can control the fields!\n    this.fields = new Map();\n\n    // Map to store if the field was once registered\n    this.registered = {};\n\n    // Map to store fields being removed\n    this.expectedRemovals = {};\n\n    // Initialize the controller state\n    this.state = {\n      values: {},\n      touched: {},\n      errors: {},\n      pristine: true,\n      dirty: false,\n      invalid: false,\n      submits: 0\n    };\n\n    // Bind functions that will be called externally\n    //this.update = this.update.bind(this);\n    this.deregister = this.deregister.bind(this);\n    this.register = this.register.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFormError = this.setFormError.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.reset = this.reset.bind(this);\n    this.update = this.update.bind(this);\n    this.validate = this.validate.bind(this);\n    this.keyDown = this.keyDown.bind(this);\n    this.getField = this.getField.bind(this);\n    this.expectRemoval = this.expectRemoval.bind(this);\n\n    // Updater will be used by fields to update and register\n    this.updater = {\n      register: this.register,\n      deregister: this.deregister,\n      setValue: this.setValue,\n      setTouched: this.setTouched,\n      setError: this.setError,\n      update: this.update,\n      getField: this.getField,\n      expectRemoval: this.expectRemoval\n    };\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  // Generate the external form state that will be exposed to the users\n  getFormState() {\n    return {\n      ...this.state,\n      pristine: this.pristine(),\n      dirty: this.dirty(),\n      invalid: this.invalid()\n    };\n  }\n\n  // Generate the external form api that will be exposed to the users\n  getFormApi() {\n    const setValue = (field, value, options) =>\n      this.fields.get(field).fieldApi.setValue(value, null, {\n        allowEmptyString: this.options.allowEmptyStrings,\n        ...options\n      });\n\n    const setTouched = (field, value) =>\n      this.fields.get(field).fieldApi.setTouched(value);\n\n    const setError = (field, value) =>\n      this.fields.get(field).fieldApi.setError(value);\n\n    const setFormError = (error) => this.setFormError(error);\n\n    // Special setter for directly setting errors ( used for array fields )\n    const setFieldError = (field, value) => this.setError(field, value);\n\n    const setValues = values => this.setValues(values);\n\n    const setInitialValue = (field, value) => this.setInitialValue(field, value);\n\n    const getValue = (field) => this.getValue(field);\n\n    const getTouched = (field) => this.getTouched(field);\n\n    const getError = (field) => this.getError(field);\n\n    const reset = () => this.reset();\n\n    const submitForm = e => this.submitForm(e);\n\n    const getState = () => this.getFormState();\n\n    const getValues = () => this.getFormState().values;\n\n    const getFullField = field => this.getFullField(field);\n\n    const fieldExists = field => this.fields.get(field) != null;\n\n    const getInitialValue = field => this.getInitialValue(field);\n\n    const validate = () => this.validate();\n\n    const validateField = field => this.fields.get(field).fieldApi.validate();\n\n    const resetField = field => this.fields.get(field).fieldApi.reset();\n\n    const getOptions = () => this.options;\n\n    return {\n      setValue,\n      setTouched,\n      setError,\n      setValues,\n      setInitialValue,\n      getValue,\n      getTouched,\n      getError,\n      reset,\n      submitForm,\n      getState,\n      getValues,\n      getFullField,\n      fieldExists,\n      getInitialValue,\n      setFormError,\n      validate,\n      validateField,\n      resetField,\n      emitter: this,\n      setFieldError,\n      getOptions\n    };\n  }\n\n  /* ------------------- Internal Methods ------------------- */\n\n  setValue(field, value, notify = true) {\n    debug(`Setting ${field} to ${value}`);\n    // Set the new value\n    ObjectMap.set(this.state.values, field, value);\n    // The forms values have changed so we want to clear form level error\n    delete this.state.error;\n    // Emit change events\n    this.emit('change');\n    this.emit('value', field, value);\n    // Notify other fields \n    if (notify) this.notify(field);\n  }\n\n  setTouched(field, value) {\n    ObjectMap.set(this.state.touched, field, value);\n    this.emit('change');\n  }\n\n  setError(field, value) {\n    debug(`Setting ${field}'s error to ${value}`);\n\n    // Dont set the error if there is already an array level error ( array specific case )\n    // Elaborate... supose the following \n    // - the field is an array field\n    // - we have an error already for friends array field\n    // - the error is not an array meaning its array level validation\n    if (/\\[[0-9]*\\]$/.test(field)) {\n\n      const arrayField = field.slice(0, field.lastIndexOf('['));\n\n      const error = ObjectMap.get(this.state.errors, arrayField);\n\n      debug(`Array field ${arrayField}'s error is ${error}`);\n\n      if (error && !Array.isArray(error)) {\n        debug(`Never set ${field}'s error to ${value} becuase there is already array level validation with error ${error}`);\n        return;\n      }\n\n    }\n\n    ObjectMap.set(this.state.errors, field, value);\n    this.emit('change');\n  }\n\n  setFormError(value) {\n    this.state.error = value;\n    this.emit('change');\n  }\n\n  setInitialValue(field, value) {\n    ObjectMap.set(this.options.initialValues, field, value);\n  }\n\n  // Notify other fields \n  notify(field) {\n    // Get the notifier\n    const notifier = this.fields.get(field);\n    // If we have a list we must notify each one\n    if (notifier.notify) {\n      notifier.notify.forEach(fieldName => {\n        // Get the field toNotify\n        const toNotify = this.fields.get(fieldName);\n        if (toNotify) {\n          debug('Notifying', toNotify.field);\n          const value = this.getValue(toNotify.field);\n          toNotify.fieldApi.validate(value);\n        }\n      });\n    }\n  }\n\n  getValue(field) {\n    debug('Getting value for', field, ObjectMap.get(this.state.values, field));\n    return ObjectMap.get(this.state.values, field);\n  }\n\n  getTouched(field) {\n    return ObjectMap.get(this.state.touched, field);\n  }\n\n  getError(field) {\n    return ObjectMap.get(this.state.errors, field);\n  }\n\n  getFullField(field) {\n    return field;\n  }\n\n  valid() {\n    return !!(ObjectMap.empty(this.state.errors) && !this.state.error);\n  }\n\n  invalid() {\n    return !!(!ObjectMap.empty(this.state.errors) || this.state.error);\n  }\n\n  pristine() {\n    return ObjectMap.empty(this.state.touched) && ObjectMap.empty(this.state.values);\n  }\n\n  dirty() {\n    return !this.pristine();\n  }\n\n  getInitialValue(field) {\n    return ObjectMap.get(this.options.initialValues, field);\n  }\n\n  reset() {\n    debug('Resetting');\n    // So because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and reset them. Not a big deal but very important to remember that you cant simply\n    // reset this controllers state!\n    this.fields.forEach((field) => {\n      field.fieldApi.reset();\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field.field);\n      if (initialValue !== undefined) {\n        this.getFormApi().setValue(field.field, initialValue, { initial: true });\n      }\n    });\n\n    this.emit('change');\n  }\n\n  setValues(values) {\n    debug('Setting values');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and set them. Not a big deal but very important to remember that you cant simply\n    // set this controllers state!\n    this.fields.forEach((field) => {\n      // Initialize the values if it needs to be\n      const value = ObjectMap.get(values, field.field);\n      if (value !== undefined) {\n        this.getFormApi().setValue(field.field, value);\n      }\n    });\n\n    this.emit('change');\n  }\n\n  validate() {\n    debug('Validating all fields');\n    // Itterate through and call validate on every field\n    this.fields.forEach((field, key) => {\n      const value = this.getValue(key);\n      field.fieldApi.validate(value);\n      field.fieldApi.setTouched(true);\n    });\n\n    // Call the form level validation if its present\n    if (this.options.validate) {\n      const res = this.options.validate(this.state.values);\n      this.setFormError(res);\n    }\n\n    // Call the forms field level validation\n    if (this.options.validateFields) {\n      const errors = this.options.validateFields(this.state.values);\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fields.forEach((field) => {\n        // Check to see if there is an error to set \n        // Note: we use has becuause value may be there but undefined\n        if (ObjectMap.has(errors, field.field)) {\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.getFormApi().setError(field.field, error);\n        }\n      });\n\n    }\n  }\n\n  keyDown(e) {\n    // If preventEnter then return\n    if (e.keyCode == 13 && this.options.preventEnter) {\n      e.preventDefault(e);\n      return false;\n    }\n  }\n\n  submitForm(e) {\n\n    // Incriment number of submit attempts\n    this.state.submits = this.state.submits + 1;\n\n    if (!this.options.dontPreventDefault && e) {\n      // Prevent default browser form submission\n      e.preventDefault(e);\n    }\n\n    // Validate the form\n    this.validate();\n\n    // Emit a change \n    this.emit('change');\n\n    // Check validity and perform submission if valid\n    if (this.valid()) {\n      debug('Submit', this.state);\n      this.emit('submit');\n    } else {\n      debug('Submit', this.state);\n      this.emit('failure');\n    }\n  }\n\n  /* ---------------- Updater Functions (used by fields) ---------------- */\n\n  register(field, fieldState, fieldStuff) {\n    debug('Register', field, fieldState);\n    // Determine if the field has been registered before\n    const registered = this.registered[field];\n    // Set registered flag\n    this.registered[field] = true;\n    // Always register the field\n    this.fields.set(field, fieldStuff);\n    // Check for expected removal and clear it out on register\n    const magicValue = field.slice(0, field.lastIndexOf(']') + 1 || field.length);\n    delete this.expectedRemovals[magicValue];\n    // The field is a shadow field ooo spooky so dont set anything\n    if (fieldStuff.shadow) {\n      return;\n    }\n    // Initialize state\n    // When a user had keep state load existing values\n    if (fieldStuff.keepState) {\n      const value = ObjectMap.get(this.state.values, field);\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      // If we have a defined value then set that\n      if (value !== undefined) {\n        this.getFormApi().setValue(field, value || fieldState.value);\n      }\n      // Otherwise we want to use the initial value \n      else if (initialValue !== undefined) {\n        this.getFormApi().setValue(field, initialValue);\n      } else {\n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      // Finnally we set touched\n      const touched = ObjectMap.get(this.state.touched, field);\n      this.getFormApi().setTouched(field, touched);\n      // Error will get set by validator implicitly so we dont need to remember that\n    } else {\n      // Initialize the values if it needs to be\n      const initialValue = ObjectMap.get(this.options.initialValues, field);\n      if (initialValue !== undefined && !registered) {\n        this.getFormApi().setValue(field, initialValue, { initial: true });\n      } else {\n        // Otherwise set the value to whatever the field is set to ( might have been field level initial value )\n        this.setValue(field, fieldState.value, false);\n      }\n      this.setTouched(field, fieldState.touched);\n    }\n    this.setError(field, fieldState.error);\n\n  }\n\n  deregister(field, options) {\n    debug('Deregister', field);\n    const field2remove = this.fields.get(field);\n    const magicValue = field.slice(0, field.lastIndexOf(']') + 1 || field.length);\n    if (!field2remove.keepState || this.expectedRemovals[magicValue]) {\n      // Remove the data!\n      ObjectMap.delete(this.state.values, field);\n      ObjectMap.delete(this.state.touched, field);\n      ObjectMap.delete(this.state.errors, field);\n    }\n    // Always need to delete the field\n    this.fields.delete(field);\n    this.emit('change');\n    this.emit('value', field);\n  }\n\n  expectRemoval(field) {\n    debug('Expecting removal of', field);\n    this.expectedRemovals[field] = true;\n  }\n\n  update(field, fieldStuff) {\n    debug('Update', field);\n    this.fields.set(field, fieldStuff);\n  }\n\n  getField(field) {\n    debug('Getting Field', field);\n    return this.fields.get(field);\n  }\n}\n\nexport default FormController;\n","import React from 'react';\n\nconst FormRegisterContext = React.createContext({\n  register: () => {},\n  deregister: () => {},\n  setValue: () => {},\n  setTouched: () => {}, \n  setError: () => {},\n  update: () => {}, \n  getField: () => {}, \n  expectRemoval: () => {}\n});\n\nconst FormStateContext = React.createContext({});\nconst FormApiContext = React.createContext({\n  getFullField: () => {},\n  getValues: () => {},\n  getOptions: () => ({}),\n  setInitialValue: () => {},\n  getInitialValue: () => {}\n});\nconst GroupContext = React.createContext();\nconst SelectContext = React.createContext();\n\nexport { FormRegisterContext, FormStateContext, FormApiContext, GroupContext, SelectContext };\n","import React from 'react';\nimport { FormStateContext, FormApiContext, FormRegisterContext } from '../Context';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst logger = Debug('informed:FormProvider' + '\\t\\t');\n\nconst FormProvider = ({ \n  children, \n  formApi, \n  formController,\n  formState, \n  ...rest\n}) => {\n\n  logger('Render FormProvider');\n\n  if( formApi ){\n    logger('Render FormProvider with given values');\n    /* --- Create Provider with given values and render Content --- */\n    return (\n      <FormRegisterContext.Provider value={formController.updater}>\n        <FormApiContext.Provider value={formApi}>\n          <FormStateContext.Provider value={formState}>\n            {children}\n          </FormStateContext.Provider>\n        </FormApiContext.Provider>\n      </FormRegisterContext.Provider>\n    );\n  } \n\n  logger('Render FormProvider with generated values');\n  /* --- User did not pass values so create them --- */\n  const value = useForm(rest);\n\n  return (\n    <FormRegisterContext.Provider value={value.formController.updater}>\n      <FormApiContext.Provider value={value.formApi}>\n        <FormStateContext.Provider value={value.formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n  \n};\n\nexport default FormProvider;\n","import { useEffect, useLayoutEffect } from 'react';\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Debug from '../debug';\nimport FormController from '../FormController';\nimport FormProvider from '../components/FormProvider';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\n\nconst logger = Debug('informed:useForm' + '\\t\\t');\n\nconst useForm = ({\n  dontPreventDefault,\n  initialValues,\n  validate,\n  validateFields,\n  allowEmptyStrings,\n  preventEnter,\n  getApi,\n  onChange,\n  onSubmit,\n  onValueChange,\n  onSubmitFailure,\n  ...userProps\n}) => {\n\n  logger('Render useForm');\n\n  // Generate form controller options \n  const formControllerOptions = useMemo(()=>({\n    dontPreventDefault,\n    initialValues,\n    validate,\n    validateFields,\n    allowEmptyStrings,\n    preventEnter,\n  }), [dontPreventDefault, initialValues, validate, validateFields, allowEmptyStrings, preventEnter]);\n\n  // Create form controller\n  const [formController] = useState(()=> new FormController(formControllerOptions));\n\n  // Update the options when they change\n  useEffect(()=>{\n    formController.setOptions(formControllerOptions);\n  }, [formControllerOptions]);\n\n  // Form state will be used to trigger rerenders\n  const [ formState, setFormState ] = useState( () => formController.getFormState() );\n\n  // Register for events\n  useLayoutEffect(()=>{\n\n    const onChangeHandler = () => onChange && onChange( formController.getFormState() );\n    const onSubmitHandler = () => onSubmit && onSubmit( formController.getFormState().values );\n    const onValueHandler = () => onValueChange && onValueChange( formController.getFormState().values );\n    const onFailureHandler = () => onSubmitFailure && onSubmitFailure( formController.getFormState().errors );\n\n    // Register for events\n    formController.on('change', onChangeHandler);\n    formController.on('submit', onSubmitHandler);\n    formController.on('value', onValueHandler);\n    formController.on('failure', onFailureHandler);\n\n    // Unregister events\n    return () => {\n      formController.removeListener('change', onChangeHandler);\n      formController.removeListener('submit', onSubmitHandler);\n      formController.removeListener('value', onValueHandler);\n      formController.removeListener('failure', onFailureHandler);\n    };\n  }, [onChange, onSubmit, onValueChange, onSubmitFailure ]);\n\n  // Initialize code like constructor but not muhahah\n  useState(()=>{\n    // Update the form state to trigger rerender!\n    const onChangeHandlerRerender = () => setFormState( formController.getFormState() );\n    formController.on('change', onChangeHandlerRerender);\n    // Give access to api outside\n    if (getApi) {\n      getApi(formController.getFormApi());\n    }\n  });\n\n  // We dont want this to happen on every render so thats why useState is used here\n  const [ formApi ] = useState( ()=> formController.getFormApi() );\n\n  const render = (children) => (\n    <FormProvider formApi={formApi} formState={formState} formController={formController}>\n      {children}\n    </FormProvider>\n  );\n\n  return { formApi, formState, formController, render, userProps };\n};\n\nexport default useForm;\n","import React from 'react';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst debug = Debug('informed:Form' + '\\t\\t');\n\nconst Form = ({ \n  children, \n  render: renderProp,\n  component,\n  ...rest }) => {\n\n  debug('Render FORM');\n\n  const { \n    formApi, \n    formController,\n    formState, \n    render,\n    userProps\n  } = useForm(rest);\n    \n  const getContent = () => {\n\n    const props = {\n      formState,\n      formApi\n    };\n\n    if (component) {\n      return React.createElement(component, props, children);\n    }\n    if (renderProp) {\n      return renderProp(props);\n    }\n    if (typeof children === 'function') {\n      return children(props);\n    }\n    return children;\n  };\n\n  /* --- Render Content --- */\n  return render(\n    <form\n      {...userProps}\n      onReset={formController.reset}\n      onSubmit={formController.submitForm}\n      onKeyDown={formController.keyDown}>\n      {getContent()}\n    </form>  \n  );\n  \n};\n\nexport default Form;\n","import React, { useContext } from 'react';\nimport { FormApiContext } from '../Context';\n\nfunction useFormApi() {\n  const formApi = useContext(FormApiContext);\n  return formApi;\n}\n\nexport default useFormApi;\n","import React, { useContext } from 'react';\nimport { FormStateContext } from '../Context';\n\nfunction useFormState() {\n  const formState = useContext(FormStateContext);\n  return formState;\n}\n\nexport default useFormState;\n","import React, { useContext, useMemo } from 'react';\nimport { FormRegisterContext, FormStateContext, FormApiContext } from '../Context';\nimport useFormApi from '../hooks/useFormApi';\nimport useFormState from '../hooks/useFormState';\n\nconst buildScopedFormApi = ( scope, formApi ) => {\n  return {\n    ...formApi,\n    getValue: field => formApi.getValue(`${scope}.${field}`),\n    getTouched: field => formApi.getTouched(`${scope}.${field}`),\n    getError: field => formApi.getError(`${scope}.${field}`),\n    setValue: (field, value) => formApi.setValue(`${scope}.${field}`, value),\n    setTouched: (field, value) => formApi.setTouched(`${scope}.${field}`, value),\n    setError: (field, value) => formApi.setError(`${scope}.${field}`, value),\n    getFullField: field => `${formApi.getFullField(scope)}.${field}`\n  }; \n};\n\nconst buildScopedRegister = ( scope, formRegister ) => {\n\n  const { register, deregister, setValue, setTouched, setError, update, getField, expectRemoval } = formRegister;\n\n  return {\n    register: ( field, ...args ) => register(`${scope}.${field}`, ...args),\n    deregister: ( field, ...args ) => deregister(`${scope}.${field}`, ...args),\n    update: ( field, ...args ) => update(`${scope}.${field}`, ...args),\n    setValue: ( field, ...args ) => setValue(`${scope}.${field}`, ...args),\n    setTouched: ( field, ...args ) => setTouched(`${scope}.${field}`, ...args),\n    setError: ( field, ...args ) => setError(`${scope}.${field}`, ...args),\n    getField: ( field, ...args ) => getField(`${scope}.${field}`, ...args),\n    expectRemoval: ( field, ...args ) => expectRemoval(`${scope}.${field}`, ...args),\n  }; \n};\n\nconst Scope = ({scope, children}) => {\n\n  const formRegister = useContext(FormRegisterContext);\n  const formApi = useFormApi();\n  const formState = useFormState();\n\n  // VERY important to memoize the builders!\n  const scopedFormApi = useMemo(() => buildScopedFormApi(scope, formApi), [scope]);\n  const scopedRegister = useMemo(() => buildScopedRegister(scope, formRegister), [scope]);\n\n  return (\n    <FormRegisterContext.Provider value={scopedRegister}>\n      <FormApiContext.Provider value={scopedFormApi}>\n        <FormStateContext.Provider value={formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n\n};\n\nexport default Scope;\n","import React, { useState, useRef } from 'react';\n\n// TODO figure out if this is bad? \n// https://github.com/facebook/react/issues/14543\nfunction useStateWithGetter(initial) {\n  const ref = useRef();\n  const [state, setState] = useState(initial);\n  ref.current = state;\n  const set = (value) => {\n    ref.current = value;\n    setState(value);\n  };\n  const get = () => {\n    return ref.current;\n  };\n  return [state, set, get];\n}\n\nexport default useStateWithGetter;","import React, { useState, useEffect, useContext, useMemo, useRef } from 'react';\nimport { FormRegisterContext } from '../Context';\nimport useFormApi from './useFormApi';\nimport useStateWithGetter from './useStateWithGetter';\nimport Debug from '../debug';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\nconst logger = Debug('informed:useField' + '\\t');\n\nconst initializeValue = (value, mask) => {\n  if (value != null) {\n    // Call mask if it was passed\n    if (mask) {\n      return mask(value);\n    }\n    return value;\n  }\n  // Not needed but called out specifically\n  return undefined;\n};\n\nconst initializeMask = (value, format, parse) => {\n  // Call format and parse if they were passed\n  if (format && parse) {\n    return format(value);\n  }\n  return value;\n};\n\nfunction useField(fieldProps = {}, userRef) {\n  // Pull props off of field props\n  const {\n    field,\n    validate,\n    mask,\n    maskWithCursorOffset,\n    format,\n    parse,\n    initialValue,\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    maskOnBlur,\n    allowEmptyString,\n    onValueChange,\n    notify,\n    keepState,\n    maintainCursor,\n    debug,\n    shadow,\n    ...userProps\n  } = fieldProps;\n\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // Grab the form state\n  const formApi = useFormApi();\n\n  // Initialize state\n  const [value, setVal, getVal] = useStateWithGetter(\n    initializeValue(initialValue, mask)\n  );\n  const [error, setErr, getErr] = useStateWithGetter(\n    validateOnMount ? validate(value) : undefined\n  );\n  const [touched, setTouch, getTouch] = useStateWithGetter();\n  const [cursor, setCursor, getCursor] = useStateWithGetter(0);\n  const [cursorOffset, setCursorOffset, getCursorOffset] = useStateWithGetter(\n    0\n  );\n  const [maskedValue, setMaskedValue] = useState(\n    initializeMask(value, format, parse)\n  );\n\n  // Create then update refs to props\n  const initialValueRef = useRef(initialValue);\n  initialValueRef.current = initialValue;\n\n  /* ---------------------- Setters ---------------------- */\n\n  // Define set error\n  const setError = val => {\n    logger(`Setting ${field}'s error to ${val}`);\n    setErr(val);\n    updater.setError(field, val);\n  };\n\n  // Define set value\n  const setValue = (val, e, options = {}) => {\n    const formOptions = formApi.getOptions();\n\n    logger(`Setting ${field} to ${val}`);\n    // Initialize maked value\n    let maskedVal = val;\n    // Set value to undefined if its an empty string\n\n    if (\n      val === '' &&\n      !allowEmptyString &&\n      !options.allowEmptyString &&\n      !formOptions.allowEmptyStrings\n    ) {\n      val = undefined;\n    }\n    // Turn string into number for number fields\n    if (fieldProps.type === 'number' && val !== undefined) {\n      val = +val;\n    }\n    // Call mask if it was passed\n    if (mask && !maskOnBlur) {\n      maskedVal = mask(val);\n      val = mask(val);\n    }\n    // Call maskWithCursorOffset if it was passed\n    if (maskWithCursorOffset && !maskOnBlur) {\n      const res = maskWithCursorOffset(val);\n      maskedVal = res.value;\n      val = res.value;\n      setCursorOffset(res.offset);\n    }\n    // Call format and parse if they were passed\n    if (format && parse) {\n      val = parse(val);\n      maskedVal = format(val);\n    }\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on change && its not the initial validation\n    if (validate && validateOnChange && !options.initial) {\n      logger(`Validating after change ${field} ${val}`);\n      setError(validate(val, formApi.getValues()));\n    }\n    // Remember Cursor position!\n    if (e && e.target && e.target.selectionStart) {\n      setCursor(e.target.selectionStart);\n    }\n\n    // Now we update the value\n    setVal(val);\n    setMaskedValue(maskedVal);\n    // If the user passed in onValueChange then call it!\n    if (onValueChange) {\n      onValueChange(val);\n    }\n    // Call the updater\n    updater.setValue(field, val);\n  };\n\n  // Define set touched\n  const setTouched = (val, reset) => {\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on blur\n    if (validate && validateOnBlur && !reset && val) {\n      logger(`Validating after blur ${field} ${getVal()}`);\n      setError(validate(getVal(), formApi.getValues()));\n    }\n    // Call mask if it was passed\n    if (mask && maskOnBlur) {\n      const maskedVal = mask(getVal());\n      // Now we update the value\n      setVal(maskedVal);\n      setMaskedValue(maskedVal);\n      // If the user passed in onValueChange then call it!\n      if (onValueChange) {\n        onValueChange(maskedVal);\n      }\n      // Call the updater\n      updater.setValue(field, maskedVal);\n    }\n    // Call maskWithCursorOffset if it was passed\n    if (maskWithCursorOffset && maskOnBlur) {\n      const res = maskWithCursorOffset(getVal());\n      setCursorOffset(res.offset);\n      // Now we update the value\n      setVal(res.value);\n      setMaskedValue(res.value);\n      // If the user passed in onValueChange then call it!\n      if (onValueChange) {\n        onValueChange(res.value);\n      }\n      // Call the updater\n      updater.setValue(field, res.value);\n    }\n    setTouch(val);\n    updater.setTouched(field, val);\n  };\n\n  // Define reset\n  const reset = () => {\n    const initVal = initializeValue(initialValueRef.current, mask);\n    // TODO support numbers\n    setValue(initialValueRef.current);\n    // Setting somthing to undefined will remove it\n    setError(validateOnMount ? validate(initVal) : undefined);\n    setTouched(undefined, true);\n  };\n\n  // Define validate\n  const fieldValidate = override => {\n    if (validate) {\n      logger(`Field validating ${field} ${getVal() || override}`);\n      setError(validate(getVal() || override, formApi.getValues()));\n    }\n  };\n\n  /* ----------------- Field Api && State ----------------- */\n\n  // Build the field api\n  const fieldApi = {\n    setValue,\n    setTouched,\n    setError,\n    reset,\n    validate: fieldValidate,\n    getValue: getVal,\n    getTouched: getTouch,\n    getError: getErr\n  };\n\n  // Build the field state\n  let fieldState = {\n    value,\n    error,\n    touched,\n    maskedValue\n  };\n\n  // Create shadow state if this is a shadow field\n  if (shadow) {\n    fieldState = {\n      error,\n      touched\n    };\n  }\n\n  // Initial register needs to happen before render ( simulating constructor muhahahah )\n  useState(() => {\n    const fullField = formApi.getFullField(field);\n    logger('Initial Register', fullField);\n    updater.register(field, fieldState, {\n      field: fullField,\n      fieldApi,\n      fieldState,\n      notify,\n      keepState,\n      shadow\n    });\n  });\n\n  logger('Render', formApi.getFullField(field), fieldState);\n\n  const internalRef = useRef(null);\n\n  const ref = React.useMemo(() => userRef || internalRef, []);\n\n  // We want to register and deregister this field when field name changes\n  useEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Register', fullField);\n      updater.register(field, fieldState, {\n        field: fullField,\n        fieldApi,\n        fieldState,\n        notify,\n        keepState,\n        shadow\n      });\n\n      return () => {\n        logger('Deregister', fullField);\n        updater.deregister(field);\n      };\n    },\n    // This is VERYYYY!! Important!\n    [field]\n  );\n\n  // We want to let the controller know of changes on this field when specific props change\n  useEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      logger('Update', field);\n      updater.update(field, {\n        field: fullField,\n        fieldApi,\n        fieldState,\n        notify,\n        keepState,\n        shadow\n      });\n\n      // Should re-trigger validation if validation handler updates\n      const val = getVal();\n      if (\n        validate &&\n        ((validateOnChange && val) || (validateOnBlur && getTouch()))\n      ) {\n        setError(validate(val, formApi.getValues()));\n      }\n    },\n    // This is VERYYYY!! Important!\n    [validate, validateOnChange, validateOnBlur, onValueChange]\n  );\n\n  // Maintain cursor position\n  useLayoutEffect(\n    () => {\n      if (maintainCursor && ref.current != null && getCursor())\n        ref.current.selectionEnd = getCursor() + getCursorOffset();\n    },\n    [value]\n  );\n\n  // for debugging\n  useLayoutEffect(() => {\n    if (debug && ref) {\n      ref.current.style.border = '5px solid orange';\n      setTimeout(() => {\n        ref.current.style.borderWidth = '2px';\n        ref.current.style.borderStyle = 'inset';\n        ref.current.style.borderColor = 'initial';\n        ref.current.style.borderImage = 'initial';\n      }, 500);\n    }\n  });\n\n  // This is an awesome optimization!!\n  const shouldUpdate = [\n    ...Object.values(fieldState),\n    ...Object.values(fieldProps),\n    ...Object.values(userProps)\n  ];\n\n  const render = children => useMemo(() => children, [...shouldUpdate]);\n\n  return { fieldState, fieldApi, render, ref, userProps };\n}\n\nexport default useField;\n","import React, { useState, useMemo, useContext } from 'react';\nimport useFormApi from './useFormApi';\nimport useField from './useField';\nimport useStateWithGetter from './useStateWithGetter';\nimport Debug from '../debug';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\nimport { FormRegisterContext } from '../Context';\n\nconst logger = Debug('informed:useArrayField'+ '\\t');\n\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\nconst uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nconst useArrayField = ({ field, initialValue, validate, ...props }) => {\n\n  const formApi = useFormApi();\n\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // May be scoped so get full field name!!\n  const fullField = formApi.getFullField(field);\n\n  const initialVals = formApi.getInitialValue(fullField) || initialValue || [];\n\n  // TODO throw error if initial value and its not array\n\n  // If keep state was passed into the child inputs we need to maintain the length of \n  // keys, in order to do so we grab the value from informeds api\n\n  const keptValues = formApi.getValue(fullField);\n\n  const [initialValues, setInitialValues] = useState(keptValues || initialVals);\n\n  const initialKeys = initialValues ? initialValues.map(() => uuidv4()) : [];\n\n  const [keys, setKeys, getKeys] = useStateWithGetter(initialKeys);\n\n  const validateWithLength = useMemo( () => ( value, values ) => { \n    const length = getKeys() == null ? 0 : getKeys().length;\n    return validate ? validate( value, length, values ) : undefined;\n  });\n\n  // NOTE: important that we use \"field\" and NOT full field as getter is scoped!\n  const { fieldApi } = useField({ field, validate: validateWithLength, shadow: true, ...props });\n\n  // Register for events\n  useLayoutEffect(()=>{\n\n    // Define event handler\n    const onChangeHandler = ( fieldName  ) => {\n\n      // Dont do anythign if we updated\n      if( fieldName === fullField ){\n        return;\n      }\n      \n      logger(`${fullField} changed`);\n\n      // determine if one of our array children triggered this change \n      if( RegExp(`${fullField}\\\\[[0-9]+\\\\]`).test(fieldName) ) {\n        // If it was than update the shadow field!!! \n        // NOTE: important that we use \"field\" and NOT full field as getter is scoped!\n        const arrayFieldValue = formApi.getValue(field);\n        logger(`setting array field ${fullField} to ${arrayFieldValue}`);\n        fieldApi.setValue(arrayFieldValue);\n      }\n\n    };\n\n    // Register for events\n    formApi.emitter.on('value', onChangeHandler);\n\n    // Unregister events\n    return () => {\n      formApi.emitter.removeListener('value', onChangeHandler);\n    };\n  }, [field]);\n\n  const remove = i => {\n\n    // Notify form to expect removal\n    updater.expectRemoval(`${field}[${i}]`);\n\n    // Remove the key\n    const newKeys = keys.slice(0, i).concat(keys.slice(i + 1, keys.length));\n    setKeys(newKeys);\n    // Remove the initial value ( user wanted to get rid of that input )\n    const newInitialValues = initialValues.slice(0, i).concat(initialValues.slice(i + 1, initialValues.length));\n    setInitialValues(newInitialValues);\n    formApi.setInitialValue(field, newInitialValues);\n  };\n\n  const add = () => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n  };\n\n  const addWithInitialValue = ( initialValue ) => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n    const newInitialValues = [...initialValues];\n    newInitialValues[keys.length - 1] = initialValue;\n    setInitialValues(newInitialValues);\n  };\n\n  const fields = keys.map((key, i) => ({\n    key,\n    field: `${field}[${i}]`,\n    remove: () => remove(i),\n    initialValue: initialValues && initialValues[i]\n  }));\n\n  return { fields, add, addWithInitialValue };\n};\n\nexport default useArrayField;\n","import React, { useState } from 'react';\nimport useArrayField from '../hooks/useArrayField';\n\nconst ArrayField = ({ children, ...props }) => {\n\n  const arrayField = useArrayField(props);\n\n  return children(arrayField);\n};\n\nexport default ArrayField;\n","import React from 'react';\nimport { FormApiContext } from '../Context';\n\nconst withFormApi = Component =>\n  React.forwardRef((props, ref) => (\n    <FormApiContext.Consumer>\n      {(formApi) => <Component formApi={formApi} ref={ref} {...props} />}\n    </FormApiContext.Consumer>\n  ));\n\nexport default withFormApi;\n","import React from 'react';\nimport { FormStateContext } from '../Context';\n\nconst withFormState = Component =>\n  React.forwardRef((props, ref) => (\n    <FormStateContext.Consumer>\n      {(formState) => (\n        <Component formState={formState} ref={ref} {...props} />\n      )}\n    </FormStateContext.Consumer>\n  ));\n\nexport default withFormState;\n","import React, { useMemo, useContext } from 'react';\nimport useFormApi from './useFormApi';\nimport { FormRegisterContext } from '../Context';\n\nconst buildFieldApi = (formApi, field) => {\n\n  return { \n    // TODO refactor to use field api from updater.. need to make sure this \n    // will be stable\n    getValue: () => formApi.getValue(field),\n    setValue: value => formApi.setValue(field, value),\n    getTouched: () => formApi.getTouched(field),\n    setTouched: value => formApi.setTouched(field, value),\n    getError: () => formApi.getError(field),\n    setError: value => formApi.setError(field, value),\n    reset: () => formApi.resetField(field),\n    validate: () => formApi.validateField(field), \n    exists: () => formApi.fieldExists(field)\n  };\n};\n\nfunction useFieldApi( field ) {\n  const formApi = useFormApi();\n\n  const fieldApi = useMemo( () => buildFieldApi( formApi, field ), [field] );\n  return fieldApi;\n}\n\nexport default useFieldApi;\n","import React from 'react';\nimport useFieldApi from './useFieldApi';\nimport useFormState from './useFormState';\n\nconst buildFieldState = (fieldApi) => {\n  return {\n    value: fieldApi.getValue(),\n    touched: fieldApi.getTouched(),\n    error: fieldApi.getError(),\n  };\n};\n\nfunction useFieldState( field ) {\n  const fieldApi = useFieldApi(field);\n  // TODO find better way to get this to rerender\n  const formState = useFormState();\n  // The above is a temp hack\n  const fieldState = buildFieldState(fieldApi);\n  return fieldState;\n}\n\nexport default useFieldState;\n","import React from 'react';\nimport useFieldState from '../hooks/useFieldState';\n\nconst withFieldState = field => Component => props => {\n  const fieldState = useFieldState(field);\n  return <Component fieldState={fieldState} {...props} />;\n};\n\nexport default withFieldState;","import React from 'react';\nimport useFieldApi from '../hooks/useFieldApi';\n\nconst withFieldApi = field => Component => (props) => {\n  const fieldApi = useFieldApi( field );\n  return <Component fieldApi={fieldApi} {...props} />;\n};\n\nexport default withFieldApi;\n","import React from 'react';\nimport { GroupContext } from '../Context';\n\nconst withRadioGroup = Component =>\n  React.forwardRef((props, ref) => (\n    <GroupContext.Consumer>\n      {({ radioGroupApi, radioGroupState }) => (\n        <Component\n          radioGroupApi={radioGroupApi}\n          radioGroupState={radioGroupState}\n          ref={ref}\n          {...props}\n        />\n      )}\n    </GroupContext.Consumer>\n  ));\n\nexport default withRadioGroup;\n","import React from 'react';\nimport useField from '../hooks/useField';\nimport { getChildDisplayName } from '../utils';\n\nconst asField = Component => {\n  const forwardRef = React.forwardRef((props, userRef) => {\n    const { fieldState, fieldApi, render, ref, userProps } = useField(\n      props,\n      userRef\n    );\n\n    return render(\n      <Component\n        fieldApi={fieldApi}\n        fieldState={fieldState}\n        field={props.field}\n        forwardedRef={ref}\n        debug={props.debug}\n        type={props.type}\n        {...userProps}\n      />\n    );\n  });\n\n  forwardRef.displayName = `asField(${getChildDisplayName(Component)})`;\n\n  return forwardRef;\n};\n\nexport default asField;\n","export const getChildDisplayName = WrappedComponent => {\n  // fix for \"memo\" components\n  if (WrappedComponent.type && WrappedComponent.type.name) {\n    return WrappedComponent.type.name;\n  }\n\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n","import React from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from '../../debug';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\nconst logger = Debug('informed:Text' + '\\t');\n\nconst Text = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n  logger('Render', field);\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue && maskedValue !== 0 ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e );\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { Text as BasicText };\n\nexport default asField(Text);\n","import React from 'react';\nimport withRadioGroup from '../../HOC/withRadioGroup';\n\nconst Radio = ({ radioGroupApi, radioGroupState, ...props }) => {\n  const { value: groupValue } = radioGroupState;\n  const {\n    setValue,\n    setTouched,\n    onChange: groupOnChange,\n    onBlur: groupOnBlur\n  } = radioGroupApi;\n  const {\n    value,\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={value}\n      checked={groupValue === value}\n      onChange={e => {\n        if (!e.target.checked) {\n          return;\n        }\n        setValue(value);\n        if (onChange) {\n          onChange(e);\n        }\n        if (groupOnChange) {\n          groupOnChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n        if (groupOnBlur) {\n          groupOnBlur(e);\n        }\n      }}\n      type=\"radio\"\n    />\n  );\n};\n\nexport { Radio as BasicRadio };\n\nexport default withRadioGroup(Radio);\n","import React from 'react';\nimport asField from '../../HOC/asField';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\n\nconst TextArea = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    ...rest\n  } = props;\n\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  return (\n    <textarea\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={!maskedValue ? '' : maskedValue}\n      onChange={e => {\n        setValue(e.target.value, e);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nexport { TextArea as BasicTextArea };\n\nexport default asField(TextArea);\n","import React, { useRef } from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from '../../debug';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\n\nconst logger = Debug('informed:Select' + '\\t');\n\nconst Select = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    children,\n    forwardedRef,\n    debug,\n    multiple,\n    ...rest\n  } = props;\n\n  const selectRef = useRef();\n\n  const handleChange = (e) => {\n\n    let selected = Array.from((forwardedRef || selectRef).current)\n      .filter(option => option.selected)\n      .map(option => option.value);\n\n    fieldApi.setValue(\n      multiple ? selected : selected[0] || ''\n    );\n\n    if (onChange && e) {\n      onChange(e);\n    }\n  };\n\n  // for debugging\n  useLayoutEffect(\n    () => {\n      if (debug && forwardedRef) {\n        forwardedRef.current.style.background = 'red';\n        setTimeout(() => {\n          forwardedRef.current.style.background = 'white';\n        }, 500);\n      }\n    }\n  );\n\n  logger('Render', field, value);\n\n  return (\n    <select\n      {...rest}\n      multiple={multiple}\n      name={field}\n      ref={forwardedRef || selectRef}\n      value={value || (multiple ? [] : '')}\n      onChange={handleChange}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}>\n      {children}\n    </select>\n  );\n\n};\n\nexport { Select as BasicSelect };\n\nexport default asField(Select);\n","import React from 'react';\n\nconst Option = ({ value, forwardedRef, children, ...rest }) => {\n  return (\n    <option ref={forwardedRef} value={value} key={value} {...rest}>\n      {children}\n    </option>\n  );\n};\n\nexport default Option;\n","import React from 'react';\nimport asField from '../../HOC/asField';\n\nconst Checkbox = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    debug,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      checked={!!value}\n      onChange={e => {\n        setValue(e.target.checked);\n        if (onChange) {\n          onChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n      type=\"checkbox\"\n    />\n  );\n};\n\nexport { Checkbox as BasicCheckbox };\n\nexport default asField(Checkbox);\n","import React, { Component } from 'react';\nimport { GroupContext } from '../../Context';\n\nimport asField from '../../HOC/asField';\n\nclass RadioGroup extends Component {\n  get groupContext() {\n    return {\n      radioGroupApi: {\n        ...this.props.fieldApi,\n        onChange: this.props.onChange,\n        onBlur: this.props.onBlur\n      },\n      radioGroupState: this.props.fieldState\n    };\n  }\n\n  render() {\n    return (\n      <GroupContext.Provider value={this.groupContext}>\n        {this.props.children}\n      </GroupContext.Provider>\n    );\n  }\n}\n\nexport { RadioGroup as BasicRadioGroup };\n\nexport default asField(RadioGroup);\n","import Form from './components/Form';\nimport Scope from './components/Scope';\nimport ArrayField from './components/ArrayField';\nimport FormProvider from './components/FormProvider';\n\nimport withFormApi from './HOC/withFormApi';\nimport withFormState from './HOC/withFormState';\nimport withFieldState from './HOC/withFieldState';\nimport withFieldApi from './HOC/withFieldApi';\nimport withRadioGroup from './HOC/withRadioGroup';\nimport asField from './HOC/asField';\n\nimport useForm from './hooks/useForm';\nimport useField from './hooks/useField';\nimport useFieldApi from './hooks/useFieldApi';\nimport useFieldState from './hooks/useFieldState';\nimport useFormApi from './hooks/useFormApi';\nimport useFormState from './hooks/useFormState';\nimport useArrayField from './hooks/useArrayField';\n\nimport Text from './components/form-fields/Text';\nimport Radio from './components/form-fields/Radio';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Option from './components/form-fields/Option';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\n\nimport { BasicText } from './components/form-fields/Text';\nimport { BasicRadio } from './components/form-fields/Radio';\nimport { BasicRadioGroup } from './components/form-fields/RadioGroup';\nimport { BasicTextArea } from './components/form-fields/TextArea';\nimport { BasicSelect } from './components/form-fields/Select';\nimport { BasicCheckbox } from './components/form-fields/Checkbox';\n\nexport {\n  Form,\n  FormProvider,\n  withFormApi,\n  withFormState,\n  withFieldApi,\n  withFieldState,\n  withRadioGroup,\n  asField,\n  useForm, \n  useField,\n  useFieldApi,\n  useFieldState,\n  useFormApi,\n  useFormState,\n  Text,\n  Radio,\n  TextArea,\n  Select,\n  Option,\n  Checkbox,\n  RadioGroup,\n  BasicText,\n  BasicRadio,\n  BasicRadioGroup,\n  BasicTextArea,\n  BasicSelect,\n  BasicCheckbox,\n  Scope,\n  ArrayField,\n  useArrayField\n};\n","module.exports = require(\"events\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/has\");","module.exports = require(\"lodash/pull\");","module.exports = require(\"lodash/pullAt\");","module.exports = require(\"lodash/setWith\");","module.exports = require(\"lodash/toPath\");","module.exports = require(\"lodash/unset\");","module.exports = require(\"lodash/values\");","module.exports = require(\"react\");"],"sourceRoot":""}